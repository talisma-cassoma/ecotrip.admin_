# Generated by Django 5.2.5 on 2025-08-15 16:33

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Coord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lat', models.FloatField()),
                ('lng', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('car_model', models.CharField(max_length=255)),
                ('car_plate', models.CharField(max_length=50)),
                ('car_color', models.CharField(max_length=50)),
                ('license_number', models.CharField(max_length=100)),
                ('rating', models.IntegerField(default=0)),
                ('completed_rides', models.IntegerField(default=0)),
                ('status', models.CharField(choices=[('available', 'Available'), ('on_trip', 'On Trip'), ('offline', 'Offline')], max_length=20)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('role', models.CharField(choices=[('passenger', 'Passenger'), ('driver', 'Driver'), ('admin', 'Admin')], max_length=20)),
                ('image', models.URLField(blank=True, null=True)),
                ('telephone', models.CharField(blank=True, max_length=20, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('location', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='app.coord')),
            ],
        ),
        migrations.CreateModel(
            name='Point',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='points', to='app.driver')),
                ('location', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='app.coord')),
            ],
        ),
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('distance', models.FloatField()),
                ('duration', models.FloatField()),
                ('freight', models.FloatField()),
                ('directions', models.JSONField()),
                ('status', models.CharField(choices=[('requested', 'Requested'), ('accepted', 'Accepted'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], max_length=20)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('destination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trips_destination', to='app.place')),
                ('driver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='driver_trips', to='app.driver')),
                ('interested_drivers', models.ManyToManyField(blank=True, related_name='interested_trips', to='app.driver')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trips_source', to='app.place')),
                ('passenger', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='passenger_trips', to='app.user')),
            ],
        ),
        migrations.CreateModel(
            name='TripCancellation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cancelled_by', models.CharField(choices=[('passenger', 'Passenger'), ('driver', 'Driver'), ('admin', 'Admin')], max_length=20)),
                ('reason', models.TextField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('trip', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cancellation', to='app.trip')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='canceled_trips', to='app.user')),
            ],
        ),
        migrations.AddField(
            model_name='driver',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='driver_profile', to='app.user'),
        ),
        migrations.CreateModel(
            name='UserRefreshToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=255)),
                ('is_revoked', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('expires_at', models.DateTimeField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='refresh_token', to='app.user')),
            ],
        ),
    ]
